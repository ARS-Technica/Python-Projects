"""
Search the selected text file for pairs of words loaded from an external file
rather than an input phrase.
"""


import re
# Import the filedialog module from the tkinter package
from tkinter import filedialog

class FuzzySearch:
    def word_search(self, phrase):
        # How close do words need to be inside a sentence to be detected.
        proximity = 5

        # Define the color codes for highlighting the text
        color1 = '\033[48;2;255;0;0m'   # Red background
        color2 = '\033[48;2;0;255;0m'   # Green background
        reset_color = '\033[0m'         # Reset color to default        

        # Use the filedialog module to allow the user to select the file to search
        filename = filedialog.askopenfilename()

        # Load a file of phrases to search the text file for
        # This will be pre-selected, rather than user-selected
        with open('redundant_phrases.txt', 'r') as pairs_file:
            redundancies = [line.strip().split(',') for line in pairs_file]


        # Open the file to be searched
        with open(filename, 'r') as file:

            # Read the file line by line
            for line in file:
                
                # Check each pair of words 
                for phrase in redundancies:
    
                    # Check if both words are in the line within the specified proximity
                    if phrase[0] and phrase[1] in line:
                        words = re.findall(r"[\w']+|[.,!?;]", line)
                        # Unicode version: re.findall(r"\w+|[^\w\s]", text, re.UNICODE)
    
                        if abs(words.index(phrase[0]) - words.index(phrase[1])) <= proximity:
                            # If the words are found within proximity, highlight them in the line and print the result                       
                            highlighted = line.replace(phrase[0], f'{color1}{phrase[0]}{reset_color}').replace(phrase[1], f'{color2}{phrase[1]}{reset_color}')
                            print(highlighted, end='')


if __name__ == '__main__':
    FuzzySearch().word_search(phrase = ('first', 'second'))

