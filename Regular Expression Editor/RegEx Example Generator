"""
The purpose of this project is to hammer out a new feature for PyRex Basic
that will return an example of any given Regular Expression by using the
rstr library.  

Once this program is running, it will be folded into the larger PyRex Basic
project as a menu option.
"""

from tkinter import ttk
import tkinter as tk
import rstr     # python -m pip install rstr
import re


def auto_generate_sample():
    pass


def generate_sample_from_regex(pattern: str, max_attempts=5) -> str:
    """
    Generate example matching text for the given regex pattern.
    If generation fails, returns an empty string.
    """

    pass


def create_window():
    global generate_button, regex_input, sample_input

    # Tkinter Interface
    root = tk.Tk()
    root.title("Regex Sample Generator")

    # Regex input field
    ttk.Label(root, text="Enter Regex Pattern:").grid(row=0, column=0, sticky="w", padx=5, pady=(5, 2))
    regex_input = tk.Text(root, height=2, width=50)
    regex_input.grid(row=1, column=0, padx=5, pady=2, sticky="ew")

    # Sample output field
    ttk.Label(root, text="Sample Output:").grid(row=2, column=0, sticky="w", padx=5, pady=(5, 2))
    sample_input = tk.Text(root, height=5, width=50)
    sample_input.grid(row=3, column=0, padx=5, pady=2, sticky="ew")

    # Button to generate
    generate_button = ttk.Button(root, text="Generate Sample", command=auto_generate_sample)
    generate_button.grid(row=4, column=0, padx=5, pady=10, sticky="ew")

    # Expand window with resizing
    root.columnconfigure(0, weight=1)

    root.mainloop()


if __name__ == "__main__":
    # Run the application
    create_window()




