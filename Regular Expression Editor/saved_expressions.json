"""
A nested dictionary of regular expressions displayed in the
treeview widget of the PyRex Basic regular expression editor.
Top-level key represents the category of the regular expression.
Second key represents the user-defined regular expression.
Value represents the description for the regular expression.
"""


{
    "Common Regular Expressions": {
        "Credit Cards": {
    		"description": "^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6011[0-9]{12}|622((12[6-9]|1[3-9][0-9])|([2-8][0-9][0-9])|(9(([0-1][0-9])|(2[0-5]))))[0-9]{10}|64[4-9][0-9]{13}|65[0-9]{14}|3(?:0[0-5]|[68][0-9])[0-9]{11}|3[47][0-9]{13})*$",
            "sample_text": "",
    		"sample_result": ""},
        "Date (2003-08-06)": { 
            "description": "[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}",
            "sample_text": "",
    		"sample_result": ""},
        "Date (Jan 3, 2003)": { 
            "description": "[A-Z][a-z][a-z] [0-9][0-9]*, [0-9]\{4\}",
            "sample_text": "",
    		"sample_result": ""},
        "Date (DD/MM/YYYY or MM/DD/YY)": {
            "description": "^(\d{1,2})\/(\d{1,2})\/(\d{2}|(19|20)\d{2})$",
            "sample_text": "",
    		"sample_result": ""},
        "Dollar amounts with a $ symbol": { 
            "description": "\$[0-9]*.[0-9][0-9]",
            "sample_text": "",
    		"sample_result": ""},
        "E-mail address": {
            "description": "^[\\w\\-]+(\\.[\\w\\-]+)*@([A-Za-z0-9-]+\\.)+[A-Za-z]{2,4}$", 
            "sample_text": "",
    		"sample_result": ""},
        "IP Address": { 
            "description": "^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$", 
            "sample_text": "",
    		"sample_result": ""},
        "Percentage (2 decimal places)": {
            "description": "^-?[0-9]{0,2}(\.[0-9]{1,2})?$|^-?(100)(\.[0]{1,2})?$",
            "sample_text": "",
    		"sample_result": ""},
        "Phone Numbers": { 
            "description": "(^\+[0-9]{2}|^\+[0-9]{2}\(0\)|^\(\+[0-9]{2}\)\(0\)|^00[0-9]{2}|^0)([0-9]{9}$|[0-9\-\s]{10}$)",
            "sample_text": "",
    		"sample_result": ""},
        "Social Security": { 
            "description": "[0-9]\{3\}-[0-9]\{2\}-[0-9]\{4\}",
            "sample_text": "",
    		"sample_result": ""},
        "URL": {
            "description": "^http(s)?:\/\/((\d+\.\d+\.\d+\.\d+)|(([\w-]+\.)+([a-z,A-Z][\w-]*)))(:[1-9][0-9]*)?(\/([\w-.\/:%+@&=]+[\w- .\/?:%+@&=]*)?)?(#(.*))?$/i",
            "sample_text": "",
    		"sample_result": ""},
        "Zip Code": { 
            "description": "[0-9]\{5\}(-[0-9]\{4\})?",
            "sample_text": "",
    		"sample_result": ""},
    }
}
