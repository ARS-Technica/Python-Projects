"""
The following is a test bed for adding the ability
to save file in a rich text format using Python.
Hopefully, this code will eventually be merged into
the Notebook Text Editor I'm creating with Tkinter.

Note: Python libraries for handling Rich Text files
are neither well maintained nor well documented.
"""


from tkinter import *
from tkinter import filedialog
from docx import Document
from pyth.plugins.rtf15.reader import Rtf15Reader
from pyth.plugins.plaintext.writer import PlaintextWriter

def open_file():
    file_path = filedialog.askopenfilename(filetypes=[("Text files", "*.txt"), ("Rich Text Format files", "*.rtf")])
    if file_path:
        if file_path.endswith(".txt"):
            with open(file_path, 'r', encoding='utf-8') as file:
                content = file.read()
            text.delete(1.0, END)
            text.insert(END, content)
        elif file_path.endswith(".rtf"):
            # Read and display RTF content using pythondocx
            doc = Rtf15Reader.read(open(file_path, 'rb'))
            content = PlaintextWriter.write(doc).getvalue()
            text.delete(1.0, END)
            text.insert(END, content)

def save_file():
    file_path = filedialog.asksaveasfilename(defaultextension=".txt", filetypes=[("Text files", "*.txt"), ("Rich Text Format files", "*.rtf"), ("Word files", "*.docx"), ("PDF files", "*.pdf")])
    if file_path:
        content = text.get(1.0, END)
        if file_path.endswith(".txt"):
            # Save as .txt
            with open(file_path, 'w', encoding='utf-8') as file:
                file.write(content)
        elif file_path.endswith(".rtf"):
            # Save as .rtf using pythondocx
            doc = Rtf15Reader.read(content)
            with open(file_path, 'w', encoding='utf-8') as file:
                file.write(PlaintextWriter.write(doc).getvalue())
        elif file_path.endswith(".docx"):
            # Save as .docx using python-docx
            doc = Document()
            for line in content.split('\n'):
                doc.add_paragraph(line)
            doc.save(file_path)
        elif file_path.endswith(".pdf"):
            # Save as .pdf using ReportLab
            pdf_canvas = canvas.Canvas(file_path)
            pdf_canvas.drawString(100, 800, content)
            pdf_canvas.save()

# Create the main window
root = Tk()
root.title("Text Editor")

# Create a Text widget
text = Text(root, wrap="word")
text.pack(expand=YES, fill=BOTH)

# Create a Menu
menubar = Menu(root)
root.config(menu=menubar)

# File menu
file_menu = Menu(menubar, tearoff=0)
menubar.add_cascade(label="File", menu=file_menu)

# File menu items
file_menu.add_command(label="Open", command=open_file)
file_menu.add_command(label="Save", command=save_file)
file_menu.add_separator()
file_menu.add_command(label="Exit", command=root.destroy)

# Start the main event loop
root.mainloop()


