"""
The following is an attempt to convert the .configure method
used in Tkinter's text widget to tags that format text inside
a .docx file using the Python Docx library.
"""

def format_text_widget(document):
    # Iterate over each character in the text widget
    index = "1.0"
    while True:
        # Get the next character
        char = text_widget.get(index)
        if not char:
            break

        # Check if the character has any tags applied
        tags = text_widget.tag_names(index)
        if tags:
            # Create a run for the character
            run = document.add_paragraph().add_run()
            # Apply formatting based on the tags
            for tag in tags:
                if tag == "bold":
                    run.bold = True
                elif tag == "italic":
                    run.italic = True
                elif tag == "underline":
                    run.underline = True
                elif tag == "font_size":
                    font_size = int(text_widget.tag_cget(tag, "font")[6:])
                    run.font.size = Pt(font_size)
                # Add the character to the run
                run.add_text(char)
        else:
            # If no tags are applied, just add the character without formatting
            document.add_paragraph().add_run(char)

        # Move to the next character
        index = text_widget.index(f"{index}+1c")

def format_paragraph(document, paragraph_text, tag=None):
    p = document.add_paragraph()
    words = paragraph_text.split()
    run = p.add_run()
    for word in words:
        run.add_text(word + " ")
        # Apply formatting based on the tag, if any
        if tag:
            if tag == "bold":
                run.bold = True
            elif tag == "italic":
                run.italic = True
            elif tag == "underline":
                run.underline = True
            elif tag == "font_size":
                font_size = int(text_widget.tag_cget(tag, "font")[6:])
                run.font.size = Pt(font_size)


# Places every character on its own line.
