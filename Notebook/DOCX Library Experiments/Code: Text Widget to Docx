"""
The following is an attempt to convert the .configure method
used in Tkinter's text widget to tags that format text inside
a .docx file using the Python Docx library.
"""

def save_to_docx():
    file_path = filedialog.asksaveasfilename(defaultextension=".docx")
    if file_path:
        document = Document()
        content = text_widget.get("1.0", "end")
        paragraphs = content.split('\n\n')  # Split content into paragraphs
        for paragraph in paragraphs:
            format_paragraph(document, paragraph)
        document.save(file_path)


def format_paragraph(document, paragraph_text):
    p = document.add_paragraph()
    current_index = "1.0"

    while True:
        # Find the next word or tagged range
        next_index = text_widget.tag_nextrange("sel", current_index)
        if not next_index:
            break  # No more tagged ranges

        word_start, word_end = next_index
        word = text_widget.get(word_start, word_end)
        tags = text_widget.tag_names(next_index)

        run = p.add_run(word)
        for tag in tags:
            if tag == "bold":
                run.bold = True
            elif tag == "italic":
                run.italic = True
            elif tag == "underline":
                run.underline = True
            elif tag == "font_size":
                font_size = int(text_widget.tag_cget(tag, "font")[6:])
                run.font.size = Pt(font_size)

        # Add a space after each word, but not at the end of the paragraph
        if word_end != "end":
            p.add_text(" ")

        # Update the current index for the next iteration
        current_index = word_end


# Returns the last, underlined portion, but nothing else.  Doesn't get the period.
