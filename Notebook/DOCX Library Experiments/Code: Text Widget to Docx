"""
The following is an attempt to convert the .configure method
used in Tkinter's text widget to tags that format text inside
a .docx file using the Python Docx library.
"""

def format_paragraph(document, paragraph_text):
    p = document.add_paragraph()

    current_index = "1.0"
    words_and_spaces = re.findall(r"(\b\w+\b|\s+)", paragraph_text)  # Extract words and spaces

    for item in words_and_spaces:
        #if item.isspace():
        #    p.add_run(item)  # Add space as it is, causes spaces NOT to be underlined
        #else:
        next_index = text_widget.search(item, current_index, stopindex="end")
        if next_index:
            run = p.add_run(item)  # Add the entire word as a run

            # Get the formatting tags applied to the word
            tags = text_widget.tag_names(next_index)

            # Set formatting attributes directly on the run
            run.bold = "bold" in tags
            run.italic = "italic" in tags
            run.underline = "underline" in tags

            for tag in tags:
                if tag == "font_size":
                    font_size = int(text_widget.tag_cget(tag, "font")[6:])
                    run.font.size = Pt(font_size)

            current_index = next_index + f"+{len(item)}c"


# Correct spacing.  Correct formatting.  No periods.
