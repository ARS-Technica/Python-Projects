"""
The following is an attempt to convert the .configure method
used in Tkinter's text widget to tags that format text inside
a .docx file using the Python Docx library.
"""

def format_paragraph(document, paragraph_text):
    p = document.add_paragraph()

    current_index = "1.0"
    sentences = re.split(r'(?<=[.!?])\s+', paragraph_text)  # Split paragraph into sentences

    for sentence in sentences:
        sentence_start_index = current_index

        # Split the sentence into words, spaces, and punctuation
        words = re.findall(r"(\b\w+\b|\s+|\W+)", sentence)

        for word in words:
            next_index = text_widget.search(word, current_index, stopindex="end")

            if next_index:
                run = p.add_run(word)  # Add the entire word as a run

                # Get the formatting tags applied to the word
                tags = text_widget.tag_names(next_index)

                # Set formatting attributes directly on the run
                run.bold = "bold" in tags
                run.italic = "italic" in tags
                run.underline = "underline" in tags

                for tag in tags:
                    if tag == "font_size":
                        font_size = int(text_widget.tag_cget(tag, "font")[6:])
                        run.font.size = Pt(font_size)

            current_index = next_index + f"+{len(word)}c"

        # Apply paragraph-level tags to the entire sentence
        for tag in text_widget.tag_names(sentence_start_index):
            if tag != "sel":
                p.style = tag

"""
    # Add the last sentence to the document
    run = p.add_run(sentence)
    apply_formatting(run, sentence_tags)

def apply_formatting(run, tags):
    # Apply formatting attributes based on the tags associated with the sentence
    run.bold = "bold" in tags
    run.italic = "italic" in tags
    run.underline = "underline" in tags
    
    for tag in tags:
        if tag == "font_size":
            font_size = int(text_widget.tag_cget(tag, "font")[6:])
            run.font.size = Pt(font_size)
"""


# Strips trailing spaces?  Does not display multiple tags in text widget.
