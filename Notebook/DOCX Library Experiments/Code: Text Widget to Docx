"""
The following is an attempt to convert the .configure method
used in Tkinter's text widget to tags that format text inside
a .docx file using the Python Docx library.
"""

def format_paragraph(document, paragraph_text):
    p = document.add_paragraph()

    # Split the text into characters, preserving spaces
    chars = []
    for char in paragraph_text:
        if char.isspace():
            chars.append(" ")
        else:
            chars.extend(char)

    # Group characters into tagged segments
    tagged_segments = []
    start_index = 0
    current_tag = None
    for i, char in enumerate(chars):
        if char.isspace():
            tagged_segments.append((start_index, i, current_tag))
            start_index = i + 1
            current_tag = None
        else:
            if text_widget.tag_names(f"{start_index}.{i}"):
                current_tag = list(text_widget.tag_names(f"{start_index}.{i}"))[0]  # Get first tag

    # Create WordRuns, applying formatting from tags
    for start, end, tag in tagged_segments:
        text = "".join(chars[start:end])
        run = p.add_run(text)
        if tag:
            if tag == "bold":
                run.bold = True
            elif tag == "italic":
                run.italic = True
            elif tag == "underline":
                run.underline = True
            elif tag == "font_size":
                font_size = int(text_widget.tag_cget(tag, "font")[6:])
                run.font.size = Pt(font_size)


# Formatting and spacing fine.  Partially formatted words displayed as entirely formatted.
