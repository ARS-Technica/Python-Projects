"""
The following is an attempt to convert the .configure method
used in Tkinter's text widget to tags that format text inside
a .docx file using the Python Docx library.
"""

def save_to_docx():
    file_path = filedialog.asksaveasfilename(defaultextension=".docx")
    if file_path:
        document = Document()
        content = text_widget.get("1.0", "end")
        paragraphs = content.split('\n\n')  # Split content into paragraphs
        for paragraph in paragraphs:
            format_paragraph(document, paragraph)
        document.save(file_path)
        
    os.startfile(file_path) # REMOVE AFTER DEBUGGING

def format_paragraph(document, paragraph_text):
    p = document.add_paragraph()

    current_index = "1.0"
    words = re.findall(r"(\b\w+\b|\s+|\W+)", paragraph_text)  # Extract words, spaces, and punctuation

    for word in words:
        next_index = text_widget.search(word, current_index, stopindex="end")

        if next_index:
            run = p.add_run(word)  # Add the entire word as a run

            # Get the formatting tags applied to the word
            tags = text_widget.tag_names(next_index)

            # Set formatting attributes directly on the run
            run.bold = "bold" in tags
            run.italic = "italic" in tags
            run.underline = "underline" in tags

            for tag in tags:
                if tag == "font_size":
                    font_size = int(text_widget.tag_cget(tag, "font")[6:])
                    run.font.size = Pt(font_size)


# Perfect spacing.  Punctuation visible.  Perfect Formatting.
# Unfortunately, adds a run for every. single. word.
