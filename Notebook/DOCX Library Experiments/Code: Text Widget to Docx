"""
The following is an attempt to convert the .configure method
used in Tkinter's text widget to tags that format text inside
a .docx file using the Python Docx library.
"""

def save_to_docx():
    file_path = filedialog.asksaveasfilename(defaultextension=".docx")
    if file_path:
        document = Document()
        content = text_widget.get("1.0", "end")
        paragraphs = content.split('\n\n')  # Split content into paragraphs
        for paragraph in paragraphs:
            format_paragraph(document, paragraph)
        document.save(file_path)

def format_paragraph(document, paragraph_text):
    p = document.add_paragraph()
    current_index = "1.0"
    while True:
        start_index = text_widget.search(r"\S", current_index, stopindex="end", regexp=True)
        if not start_index:
            break
        end_index = text_widget.search(r"\s", start_index, stopindex="end", regexp=True)
        if not end_index:
            end_index = "end"
        word = text_widget.get(start_index, end_index)
        current_index = end_index
        tags = text_widget.tag_names(start_index)
        start_pos = start_index + "+%dc" % len(word)
        for tag in tags:
            if tag == "bold":
                p.add_run(word).bold = True
            elif tag == "italic":
                p.add_run(word).italic = True
            elif tag == "underline":
                p.add_run(word).underline = True
            elif tag == "font_size":
                font_size = int(text_widget.tag_cget(tag, "font")[6:])
                p.add_run(word).font.size = Pt(font_size)
        if end_index == "end":
            break


# Returns ONLY formatted portions of text
