"""
The following is an attempt to convert the .configure method
used in Tkinter's text widget to tags that format text inside
a .docx file using the Python Docx library.
"""

def format_paragraph(document, paragraph_text):
    p = document.add_paragraph()
    words = paragraph_text.split()
    current_index = "1.0"
    for word in words:
        # Search for the current word in the text widget
        next_index = text_widget.search(word, current_index, stopindex="end")
        if next_index:
            start = next_index.split(".")[0] + ".0"
            end = next_index.split(".")[0] + ".end"
            tags = text_widget.tag_names(start)
            formatted_word = ""
            for tag in tags:
                # Check if the tag is applied within the current word
                if text_widget.tag_ranges(tag):
                    tag_ranges = text_widget.tag_ranges(tag)
                    for i in range(0, len(tag_ranges), 2):
                        if text_widget.compare(tag_ranges[i], "<=", next_index) and text_widget.compare(tag_ranges[i + 1], ">=", end):
                            formatted_word = text_widget.get(tag_ranges[i], tag_ranges[i + 1])
                            break
            if formatted_word:
                run = p.add_run(formatted_word)
            else:
                run = p.add_run(word)
            # Add a space after each word
            run.add_text(" ")
            # Update the current index for the next search
            current_index = next_index + "+%dc" % len(word)


# Perfect spacing.  No formatting whatsoever.
