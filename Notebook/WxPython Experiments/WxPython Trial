"""
After considerable frustration failing to get Tkinter's Text Widget to apply 
multiple styles to text, I've decided to try several other libraries, starting 
with the simplist, wxPython.

Will wxpython allow me to apply bold, italics, and underline to text in a text widget?

According to Google AI: wxPython has several features that can be used to format text:
    
StyledTextCtrl
This wxWidgets implementation of Scintilla's source code editing component has 
several styling options, including bold, italics, proportional fonts, and multiple colors.

RichTextCtrl
This generic rich text editor can handle different character styles, paragraph 
formatting, and images. It can also read and write plain text.

wx.Font
This feature has a variety of methods, including bold, which returns a bold version of a font.

RichTextCtrl
This feature can apply the given alignment to the selection or the default style. 
It can also apply bold and italic to the selection or the default style.

"""

import wx

class MyFrame(wx.Frame):
    def __init__(self):
        super().__init__(None, title="Text Formatting Example", size=(400, 300))
        
        panel = wx.Panel(self)
        vbox = wx.BoxSizer(wx.VERTICAL)
        
        self.text_ctrl = wx.TextCtrl(panel, style=wx.TE_MULTILINE)
        vbox.Add(self.text_ctrl, proportion=1, flag=wx.EXPAND | wx.ALL, border=10)
        
        bold_button = wx.Button(panel, label="Bold")
        italic_button = wx.Button(panel, label="Italic")
        underline_button = wx.Button(panel, label="Underline")
        bold_button.Bind(wx.EVT_BUTTON, self.on_bold)
        italic_button.Bind(wx.EVT_BUTTON, self.on_italic)
        underline_button.Bind(wx.EVT_BUTTON, self.on_underline)
        
        hbox = wx.BoxSizer(wx.HORIZONTAL)
        hbox.Add(bold_button, proportion=1, flag=wx.EXPAND | wx.ALL, border=5)
        hbox.Add(italic_button, proportion=1, flag=wx.EXPAND | wx.ALL, border=5)
        hbox.Add(underline_button, proportion=1, flag=wx.EXPAND | wx.ALL, border=5)
        vbox.Add(hbox, flag=wx.EXPAND | wx.ALL, border=10)
        
        panel.SetSizer(vbox)
        
    def on_bold(self, event):
        self.apply_text_style(wx.FONTWEIGHT_BOLD)
        
    def on_italic(self, event):
        self.apply_text_style(wx.FONTSTYLE_ITALIC)
        
    def on_underline(self, event):
        self.apply_text_style(wx.TEXT_ATTR_UNDERLINE)
        
    def apply_text_style(self, style):
        start, end = self.text_ctrl.GetSelection()
        attr = self.text_ctrl.GetDefaultStyle()
        if start == end:  # no selection, apply to whole text
            self.text_ctrl.SetStyle(0, self.text_ctrl.GetLastPosition(), attr)
        else:
            attr.SetFlags(style)
            self.text_ctrl.SetStyle(start, end, attr)

if __name__ == "__main__":
    app = wx.App(False)
    frame = MyFrame()
    frame.Show()
    app.MainLoop

