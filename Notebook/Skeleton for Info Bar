
"""
The following code is an attempt to add an Info Bar to the existing Status Bar of my Notebook
project.  The Info Bar will display the current position of the cursor on the text widget in ther
format: Line: 1 | Column: 0

If successful, the Info Bar should appear at the bottom, right-most edge of the window on what
is currently the Status Bar.  It should toggle on and off with a check box in the Options Menu.
The Info Bar should also not interfere with the Search Bar.
"""


# Modified toggle_search_bar to restore Status Bar when Search is toggled off.


import tkinter as tk
from tkinter import ttk

# Variables to store the visibility states before the Search Bar is toggled
was_status_bar_visible = False
was_info_bar_visible = False

# Function to toggle visibility of the status and search bars
def update_bars():
    # Status Bar toggle
    if status_bar_var.get() and info_bar_var.get():
        # Both Status Bar and Info Bar are checked
        status_bar_frame.grid(row=3, column=1, sticky='we', padx=5, pady=2)
        status_label.grid(row=0, column=0, sticky='w')
        info_label.grid(row=0, column=1, sticky='e')
        search_bar_frame.grid_forget()
    elif status_bar_var.get():
        # Only Status Bar is checked
        status_bar_frame.grid(row=3, column=1, sticky='we', padx=5, pady=2)
        status_label.grid(row=0, column=0, sticky='w')
        info_label.grid_forget()
        search_bar_frame.grid_forget()
    elif info_bar_var.get():
        # Only Info Bar is checked
        status_bar_frame.grid(row=3, column=1, sticky='we', padx=5, pady=2)
        status_label.grid_forget()
        info_label.grid(row=0, column=1, sticky='e')
        search_bar_frame.grid_forget()
    elif search_bar_var.get():
        # Only Search Bar is checked
        search_bar_frame.grid(row=3, column=1, sticky='we', padx=5, pady=2)
        status_bar_frame.grid_forget()
        # Uncheck Status Bar and Info Bar checkbuttons
        status_bar_var.set(0)
        info_bar_var.set(0)
    else:
        # None are checked
        status_bar_frame.grid_forget()
        search_bar_frame.grid_forget()

# Function to update checkbuttons when Search Bar is toggled
def toggle_search_bar():
    global was_status_bar_visible, was_info_bar_visible

    if search_bar_var.get():  # Search Bar is toggled ON
        # Remember the current state of Status Bar and Info Bar
        was_status_bar_visible = status_bar_var.get()
        was_info_bar_visible = info_bar_var.get()

        # Hide Status Bar and Info Bar
        status_bar_var.set(0)
        info_bar_var.set(0)
    else:  # Search Bar is toggled OFF
        # Restore the previous state of Status Bar and Info Bar
        status_bar_var.set(was_status_bar_visible)
        info_bar_var.set(was_info_bar_visible)

    # Update bars to reflect changes
    update_bars()

# Function to update checkbuttons when Status Bar or Info Bar are toggled
def toggle_status_info_bar():
    if status_bar_var.get() or info_bar_var.get():
        # Uncheck Search Bar if Status Bar or Info Bar is checked
        search_bar_var.set(0)
    update_bars()

# Create the main window
root = tk.Tk()
root.title("Simple Notepad with Toggleable Footer Bars")

# Create the menu bar
menu_bar = tk.Menu(root)
root.config(menu=menu_bar)

# Options menu
options_menu = tk.Menu(menu_bar, tearoff=0)
menu_bar.add_cascade(label="Options", menu=options_menu)

# Checkbutton variables
status_bar_var = tk.IntVar(value=1)  # Set to 1 to make Status Bar checked by default
info_bar_var = tk.IntVar(value=1)    # Set to 1 to make Info Bar checked by default
search_bar_var = tk.IntVar()

# Add checkbuttons to the Options menu
options_menu.add_checkbutton(label="Status Bar", variable=status_bar_var, command=toggle_status_info_bar)
options_menu.add_checkbutton(label="Info Bar", variable=info_bar_var, command=toggle_status_info_bar)
options_menu.add_checkbutton(label="Search Bar", variable=search_bar_var, command=toggle_search_bar)

# Create a placeholder for the toolbar
toolbar_placeholder = tk.Frame(root, height=30)
toolbar_placeholder.grid(row=0, column=0, columnspan=2, sticky='we')

# Create a frame for line numbers (left column placeholder)
line_numbers_frame = tk.Frame(root, width=30)
line_numbers_frame.grid(row=1, column=0, rowspan=2, sticky='ns')

# Create the text widget with a vertical scrollbar
text_frame = tk.Frame(root)
text_frame.grid(row=1, column=1, sticky='nsew')

text_area = tk.Text(text_frame, wrap="word", undo=True)
text_area.grid(row=0, column=0, sticky='nsew')

text_scrollbar = ttk.Scrollbar(text_frame, orient="vertical", command=text_area.yview)
text_scrollbar.grid(row=0, column=1, sticky='ns')
text_area.config(yscrollcommand=text_scrollbar.set)

# Configure row/column resizing
root.grid_rowconfigure(1, weight=1)
root.grid_columnconfigure(1, weight=1)
text_frame.grid_rowconfigure(0, weight=1)
text_frame.grid_columnconfigure(0, weight=1)

# Create a frame for the status bar
status_bar_frame = tk.Frame(root, relief="sunken", bd=1)
status_label = tk.Label(status_bar_frame, text="Status Bar")
info_label = tk.Label(status_bar_frame, text="Info Bar")

# Adjust grid weights to position the Info Bar label on the far right
status_bar_frame.grid_columnconfigure(0, weight=1)  # Expandable space for the Status Bar label
status_bar_frame.grid_columnconfigure(1, weight=0)  # Info label remains on the right side, next to the scrollbar

# Create a frame for the search bar
search_bar_frame = tk.Frame(root, relief="sunken", bd=1, padx=5, pady=2)
search_bar_left_frame = tk.Frame(search_bar_frame)
search_label = tk.Label(search_bar_left_frame, text="Search Bar")
search_entry = tk.Entry(search_bar_left_frame)

# Frame for search buttons
search_bar_right_frame = tk.Frame(search_bar_frame)
search_btn_1 = tk.Button(search_bar_right_frame, text="Find")
search_btn_2 = tk.Button(search_bar_right_frame, text="Replace")
search_btn_3 = tk.Button(search_bar_right_frame, text="Next")
search_btn_4 = tk.Button(search_bar_right_frame, text="Previous")

# Arrange the search bar's widgets
search_bar_left_frame.grid(row=0, column=0, sticky="w")
search_label.grid(row=0, column=0, sticky="w")
search_entry.grid(row=0, column=1, sticky="w", padx=5)

search_bar_right_frame.grid(row=0, column=1, sticky="e")
search_btn_1.grid(row=0, column=0, padx=2)
search_btn_2.grid(row=0, column=1, padx=2)
search_btn_3.grid(row=0, column=2, padx=2)
search_btn_4.grid(row=0, column=3, padx=2)

# Ensure both Status Bar and Info Bar are visible at startup
update_bars()

# Run the application
root.mainloop()

