"""
The following code is an attempt to add an Info Bar to the existing Status Bar of my Notebook
project.  The Info Bar will display the current position of the cursor on the text widget in ther
format: Line: 1 | Column: 0

If successful, the Info Bar should appear at the bottom, right-most edge of the window on what
is currently the Status Bar.  It should toggle on and off with a check box in the Options Menu.
The Info Bar should also not interfere with the Search Bar.
"""


import os
from tkinter import *


# Interface colors
main_color = "SystemButtonFace"
text_color = "black"

def create_toolbar():
    toolbar_placeholder = Frame(window, height=30, bg='lightgrey')
    toolbar_placeholder.grid(row=0, column=0, columnspan=2, sticky='we')
    Label(toolbar_placeholder, text="Toolbar Placeholder").pack(side=LEFT, padx=10, pady=5)

def create_linenumbers_canvas():
    global linenumbers_canvas
    linenumbers_canvas = Canvas(window, width=40, highlightthickness=0)                                                                                   
    linenumbers_canvas.grid(row=1, column=0, sticky="NS")
    window.grid_rowconfigure(1, minsize=linenumbers_canvas.winfo_reqheight())    
    linenumbers_canvas.grid_propagate(False)
    linenumbers_canvas.configure(width=30)

def create_text_widget(window, linenumbers_canvas):
    global text_widget
    text_editor_frame = Frame(window)
    text_widget = Text(text_editor_frame, font=("Helvetica", 16), padx=5, pady=5, wrap="none")
    text_widget.grid(row=0, column=0, columnspan=2, sticky="nsew")
    vertical_scrollbar = Scrollbar(text_editor_frame, orient="vertical", command=text_widget.yview)
    text_widget.configure(yscrollcommand=vertical_scrollbar.set)
    vertical_scrollbar.grid(row=0, column=1, sticky="ns")
    text_editor_frame.grid(row=1, column=1, sticky="nsew", padx=2, pady=2)
    window.grid_rowconfigure(0, weight=0)
    window.grid_rowconfigure(1, weight=1)
    window.grid_columnconfigure(0, weight=0)
    window.grid_columnconfigure(1, weight=1)
    return text_widget

def create_menu():
    global info_bar_var, status_bar_var, search_bar_var
    linenumbers_button_var = BooleanVar(value=1)
    info_bar_var = IntVar(value=1)  # Info Bar checked by default
    status_bar_var = IntVar(value=1)  # Status Bar checked by default
    search_bar_var = IntVar(value=0)  # Search Bar unchecked by default

    menu_bar = Menu(window)
    window.config(menu=menu_bar)

    options_menu = Menu(menu_bar, tearoff=0)
    menu_bar.add_cascade(label="Options", menu=options_menu)
    options_menu.add_checkbutton(label="Show Line Numbers", variable=linenumbers_button_var, command=toggle_linenumbers)    
    options_menu.add_separator()
    options_menu.add_checkbutton(label="Info Bar", variable=info_bar_var, command=toggle_info_bar)
    options_menu.add_checkbutton(label="Status Bar", variable=status_bar_var, command=toggle_status_bar)
    options_menu.add_checkbutton(label="Search Bar", variable=search_bar_var, command=toggle_search_bar)

def create_bottom_bar():
    global bottom_bar_frame
    bottom_bar_frame = Frame(window, relief="flat", bd=0, background=main_color)
    bottom_bar_frame.grid(row=3, column=1, sticky="we", padx=5, pady=5)
    create_info_bar()
    create_status_bar()
    create_search_bar()

def create_info_bar():
    global info_bar_frame, info_bar_label
    info_bar_frame = Frame(bottom_bar_frame, relief="flat", bd=0, background=main_color)
    info_bar_label = Label(info_bar_frame, text="Line: 1 | Column: 0", bg=main_color, fg=text_color)
    info_bar_label.pack(side=RIGHT)

def create_status_bar():
    global status_bar_frame, status_bar_label
    status_bar_frame = Frame(bottom_bar_frame, relief="flat", bd=0, background=main_color)
    status_bar_label = Label(status_bar_frame, text="Status Bar Message", bg=main_color, fg=text_color)
    status_bar_label.pack(side=LEFT)

def create_search_bar():
    global search_bar_frame
    search_bar_frame = Frame(bottom_bar_frame, relief="flat", bd=0, background=main_color)
    search_entry = Entry(search_bar_frame)
    search_entry.pack(side=LEFT)
    search_button = Button(search_bar_frame, text="Search", command=find)
    search_button.pack(side=LEFT)

def find():
    pass

# Function to toggle the Info Bar
def toggle_info_bar():
    global was_status_bar_visible
    if search_bar_var.get():
        search_bar_var.set(0)
        update_bottom_bar()
    if was_status_bar_visible:
        status_bar_var.set(1)
    info_bar_var.set(1 - info_bar_var.get())  # Toggle value
    update_bottom_bar()

# Function to toggle the Status Bar
def toggle_status_bar():
    global was_info_bar_visible
    if search_bar_var.get():
        search_bar_var.set(0)
        update_bottom_bar()
    if was_info_bar_visible:
        info_bar_var.set(1)
    status_bar_var.set(1 - status_bar_var.get())  # Toggle value
    update_bottom_bar()

def toggle_search_bar():
    global was_status_bar_visible, was_info_bar_visible
    if search_bar_var.get():
        was_status_bar_visible = status_bar_var.get()
        was_info_bar_visible = info_bar_var.get()
        status_bar_var.set(0)
        info_bar_var.set(0)
    else:
        status_bar_var.set(was_status_bar_visible)
        info_bar_var.set(was_info_bar_visible)
    update_bottom_bar()

def update_bottom_bar():
    for widget in bottom_bar_frame.winfo_children():
        widget.pack_forget()
    if search_bar_var.get():
        search_bar_frame.pack(side=LEFT, fill=BOTH)
    else:
        if status_bar_var.get():
            status_bar_frame.pack(side=LEFT, fill=BOTH)
        if info_bar_var.get():
            info_bar_frame.pack(side=RIGHT, fill=BOTH)

def toggle_linenumbers():
    if linenumbers_button_var.get():
        linenumbers_canvas.grid(row=1, column=0, sticky="NS")
    else:
        linenumbers_canvas.grid_forget()

def create_window():
    global window
    window = Tk()
    window.title("Simple Notepad with Toggleable Bottom Bar")
    window.geometry("1200x690")
    window.resizable(True, True)

    window.grid_rowconfigure(1, weight=1)
    window.grid_columnconfigure(1, weight=1)

    create_menu()
    create_toolbar()
    create_linenumbers_canvas()
    create_text_widget(window, linenumbers_canvas)
    create_bottom_bar()

    text_widget.insert("end", "Type some text here...")
    update_bottom_bar()

    window.bind("<Control-f>", lambda event: search_bar_var.set(1 - search_bar_var.get()) or toggle_search_bar())
    window.mainloop()

if __name__ == "__main__":
    create_window()

